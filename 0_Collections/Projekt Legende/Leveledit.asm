; LEVELEDITOR FUER LEGENDE; ;			   						BF'88;-----------------------------------------; Original:			1988; †berarbeite: 		13.6.2014; Original: 		EMEINE.ATR; Original Source:	LVLEDIT.SRC ; IDE: ATMASSII (Hofacker);; Every line after this commend remained ; untouched and is written exactly as it; was back in 1988 (except for the adjusted; assembler directives);-----------------------------------------; SDLISTL	EQU 560SDMCTL	EQU 559VDLIST	EQU 512NMIEN	EQU 54286CONSOL	EQU 53279STICK0	EQU 632TRIG	EQU 644PMTAB	EQU 19456PLAYER1	EQU PMTAB+512PLAYER2	EQU PMTAB+640PLAYER3	EQU PMTAB+768PLAYER4	EQU PMTAB+896BRAMADRL	EQU 207       	;BRAMADR LOWBRAMADRH	EQU 208	      	; ''    HIGR12RAM	EQU $B550DBUFLO	EQU 772   			;BUFFER LOW DBUFHI	EQU 773   			;BUFFER HIDAUX1	EQU 778   			;SEKTORNUMMER LOWDAUX2	EQU 779   			;SEKTORNUMMER HIDCOMND	EQU 770	 			;KOMMANDODSKINV	EQU 58451 			;IO ROTINE;; DLIST UND INHALT;----------------------------------	ORG $A800	JMP START;TITLE	.byte "  SPIELFELD-EDITOR  "STATUS	.byte "Orginal:    |Zeile:       |Spalte:      "		.byte "CLR|CH1|CH2|CO1|CO2|CO3|CO4|LOD|SAV|END ";COLTXT	.byte "Farben aendern|Helligkeit<=STICK=>Farbe "		.byte "Stick nach unten=>ABRUCH                ";IOSCR	.byte "Welcher Level?|Level+1 <=STICK=>Level-1 "		.byte "Level Nr.:    |Trigger wenn fertig.     ";;SAVSCR	.byte "  ZUGRIFF AUF DISK  "		.byte " EINEN MOMENT BITTE ";TTITLE	.byte "  PLAYFIELD-EDITOR  "		.byte "                    "		.byte "    LEGENDE DISK    "		.byte "      EINLEGEN      "		.byte "     UND TRIGER     "	;NUMMER	.byte "0001020304050607080910"		.byte "11121314151617181920"		.byte "2122232425262728293031323334353637383940";OBJEKT	.byte %11100000	.byte %11000000	.byte %10100000	.byte %00010000;KLAMMER		.byte %1111100	.byte %1000101	.byte %1010101	.byte %1010101	.byte %1010101	.byte %1010101		.byte %1010101	.byte %1010101	.byte %1001001	.byte %0100010	.byte %0010100	.byte %0001000 ;; VARIABLES;-----------------------------------OLD		.byte 0FUNKTION			.byte 0XPOS			.byte 0YPOS			.byte 1X		.byte 49 		;X POS PLAYERY		.byte 29 		;Y POS PLAYERORGINAL	.byte 1  		;ORGINAL ZEICHENCOLOR0	.byte 16  		;COLPF1-COLBKCOLOR1	.byte 14COLOR2	.byte 20COLOR3	.byte 10COLOR4	.byte 56BUFFER	.byte 0,0 		;BUFFERBRAMEND	.byte 0  		;ENDE BILDRAMXSEG	.byte 0XSEGMENT			.byte 0LEVEL	.byte 1  		;NR DES JEWEILIGEN LEV.SEKTOREN			.byte 1  		;GESCHRIEBENE SEKTORENCOMMAND	.byte 0CHAR	.byte $B000/256	;ZEICHENSATZ;; TABELLE DER SEKTOREN LOW+HIGH;-----------------------------------SEKTORL 	.byte <421,<462,<503,<544			.byte <585,<626SEKTORH		.byte >421,>462,>503,>544			.byte >585,>626;; DISPLAYLIST.;-----------------------------------DLIST		.byte 112,112	.byte 6+64	.word TITLE	.byte $A0	.byte 2+64+128RAM	.word STATUS	.byte $A0	.byte 2+128	.byte $A0	.byte 4+64	.word $B550  	.byte 4,4,4,4,4,4,4,4,4,4,4	.byte 4,4,4,4+128	.byte 4,4,4,4+128	.byte 112	.byte 65	.word DLIST;BLANKLST		.byte 112,112,112,112,112	.byte 7+64	.word SAVSCR	.byte 7	.byte 65	.word BLANKLST;TTLIST		.byte 112,112,112	.byte 64+7	.word TTITLE	.byte 7,7,7,7	.byte 65	.word TTLIST;; PROGRAMBEGINN  DLIST AKTIVIEREN;------------------------------------START		LDA #<TTLIST	STA SDLISTL	LDA #>TTLIST	STA SDLISTL+1;WARTE		LDA TRIG	BNE WARTE;	LDA #<DLIST	STA SDLISTL	LDA #>DLIST	STA SDLISTL+1	; DLI AKTIVIEREN	LDA #<DLI1	STA DLIVKTL	LDA #>DLI1	STA DLIVKTH	LDA #192	STA 54286; ZEICHEN ZUR AUSWAHL EINPOKEN	LDX #0CHR	TXA	STA GR12RAM+677-37,X	INX	CPX #128	BNE CHR; PM GRAFIK	LDA #PMTAB/256	STA 54279	LDA #46	STA SDMCTL	LDA #3	STA 53277	LDA #16	STA 623; ALLE PM OBJEKTE WEG.	LDX #0PWEG		LDA #0	STA PLAYER1,X	STA PLAYER2,X	STA PLAYER3,X	STA PLAYER4,X	INX	CPX #255	BNE PWEG; PMGRAFIK EINLESEN	JSR PMWEG	JSR READ; PLAYER 2	LDX #0	LDY #10PL2	LDA KLAMMER,X	STA PLAYER2,Y	INY	INX	CPX #12	BNE PL2; PLAYER 3	LDX #0	LDY #15PL3	LDA #255	STA PLAYER3,Y	STA PLAYER4,Y	INY	INX	CPX #100	BNE PL3; PM OBJ. POSITIONIEREN	LDA X	LDA #1	STA 53258	STA 53248	LDA #208	STA 53249	STA 53250	LDA #40	STA 53251	LDA #255	STA 704	LDA #10	STA 705	LDA #0	STA 707; BILDRAMADR EINTRAGEN	LDA #<GR12RAM	STA BRAMADRL	LDA #>GR12RAM	STA BRAMADRH	;LDA #>GR12RAM+812	STA BRAMEND; TASTAURKLICKEN AUS	LDA #255	STA 735	LDA #'R'	STA COMMAND	JMP IO;; STICKABFRAGE;------------------------------------	JSR OUTPUT   			;X/YPOS C.AUSGEBEN; STICK WIRD ABGEFRAGTSTICK		LDA STICK0	CMP #7	BNE NOT7	JSR RECHTSNOT7		CMP #11	BNE NOT11	JSR LINKSNOT11		CMP #13	BNE NOT13	JSR RUNTERNOT13		CMP #14	BNE NOT14	JSR RAUFNOT14		CMP #10	BNE NOT10	JSR RAUF	JSR LINKSNOT10		CMP #6	BNE NOTD6	JSR RAUF	JSR RECHTSNOTD6		CMP #9	BNE NOT9	JSR RUNTER	JSR LINKSNOT9		CMP #5	BNE NOTD5	JSR RUNTER	JSR RECHTSNOTD5		LDA TRIG	CMP #0	BNE NOTRIG	JSR TRIGGERNOTRIG		JMP STICK;; STICKBEFHELE AUSFUEREN.;------------------------------------TRIGGER		LDA YPOS       		;YPOS>18?	CMP #17	BCS HOLZEICH   		;JA Z.HOLEN	LDA YPOS       		;XPOS>40	CMP #0         		;FUNKTION	BNE PLOT       		;<40=PLOT 	JSR STARTK     		;AUSFUHREN.	RTS;PLOT		LDY #0         		;YPOS<18=PLOT	LDA ORGINAL      	;ZEICHEN	STA (BRAMADRL),Y 	;PLOTEN.	RTS;HOLZEICH		LDY #0	LDA (BRAMADRL),Y	STA ORGINAL	JSR OUTPUT	RTS;RECHTS		LDA XPOS	CMP #39	BNE NOT39	JMP STICK;NOT39		INC XPOS   			;XPOS ERHOHEN	JSR OUTPUT 			;WERT AUSGABE	JSR WAIT;		CLC        			;CURSOR 4 BIT 	LDA X	  			;RECHTS.	ADC #4	STA 53248	STA X		JSR ADC1   			;BRAM+1	RTS; LINKSLINKS		LDA XPOS	CMP #0	BNE NOT0	JMP STICK;NOT0		DEC XPOS	JSR OUTPUT	JSR WAIT;	SEC	LDA X      			;CURSOR 4 BIT	SBC #4    			;LINKS	STA 53248	STA X    			JSR SBC1   			;BRAMADR-1	RTS; RUNTERRUNTER		LDA YPOS	CMP #20	BNE NOT20	JMP STICK;NOT20		INC YPOS 	JSR OUTPUT	JSR WAIT;	JSR PMWEG   		;ALTES PM CLEAR	CLC	   				;CURSOR 8 BIT RUN-	LDA Y       		;TER.	ADC #4	STA Y	JSR READ	JSR ADC40   		;BRAMADR+40	RTS; RAUFRAUF		LDA YPOS	CMP #0	BNE NOT02	JMP STICK;NOT02		DEC YPOS	JSR OUTPUT	JSR WAIT;	JSR PMWEG   		;ALTES PM CLEAR	LDA Y      			;CURSOR 8 BIT	SBC #4      		;NACH OBEN	STA Y	JSR READ	JSR SBC40   		;BRAMADR-40	RTS;; POSITION MAUSZEIGER IN MENLINE ; ERMITTELN;------------------------------------STARTK		LDA #1	STA FUNKTION	LDA #0	STA XSEGMENT	STA XSEGSEARCH		LDA XSEGMENT	INC XSEG	INC XSEGMENT	CMP XPOS	BNE NOXPOS	JMP FOUNDNOXPOS		LDA XSEG 	CMP #4	BNE SEARCH		LDA #0	STA XSEG	LDA FUNKTION	CMP #11	BNE NO11	RTSNO11		INC FUNKTION	JMP SEARCH;; XPOSITION GEFUNDEN ; (WAS SOLL GETHAN WERDEN ?);------------------------------------FOUND		LDA FUNKTION	CMP #1	BNE NOT1	JSR CLEARSCR	RTS;NOT1		CMP #4	BNE NOT4	LDX #0      		;XREG=FARBNUMMER	JSR COLOR	RTS;NOT4		CMP #5	BNE NOT5	LDX #1	JSR COLOR	RTS;NOT5		CMP #6	BNE NOT6	LDX #2	JSR COLOR	RTS;NOT6		CMP #7	BNE NOT07	LDX #4	JSR COLOR;NOT07	CMP #8	BNE NOT8	LDA #'R'      		;DATA READ	STA COMMAND	JMP AUSWAHL;NOT8		CMP #9	BNE NOT09	LDA #'W'      		;DATA WRITE	STA COMMAND	JMP AUSWAHL;NOT09		CMP #2	BNE NOT2	LDA #>$B400	STA CHAR	RTS;NOT2		CMP #3	BNE NOT3	LDA #>$B000	STA CHAR	RTS;NOT3		RTS ;; BILDSCHIRM LOESCHEN;------------------------------------CLEARSCR		LDY #0	LDX #0	LDA BRAMADRL  			;HI UND LOW	STA BUFFER    			;BYTE DER BILD	LDA BRAMADRH  			;ADRESSE SICHERN	STA BUFFER+1;	LDA #<GR12RAM			;ZEIGER AUF 	STA BRAMADRL   			;BRAM ZUREUCK-	LDA #>GR12RAM			;SETZEN.	STA BRAMADRH;LOESCHB		LDA #0	STA (BRAMADRL),Y	JSR ADC1       			;BRAMADR+1	LDA BRAMADRH	CMP BRAMEND    			;ENDE?	BNE LOESCHB;	LDA BUFFER   			;ZEIGER AUF BRAM	STA BRAMADRL 			;RESTAURIEREN.	LDA BUFFER+1	STA BRAMADRH	RTS;; FARBE AENDERN;------------------------------------COLOR 		LDA #<COLTXT  			;HILFSTEXT	STA RAM        			;AUSGEBEN	LDA #>COLTXT	STA RAM+1;COLOP		STX BUFFER     			;X REG.SICHERN	JSR WAIT       			;PAUSE	LDX BUFFER     			;X REG. RESTORE	LDA STICK0     			;STICKABFRAGE	CMP #7	      			;RECHTS?	BNE NORIGHT    			;NEIN	INC COLOR0,X   			;JA HELLIGKEIT.	JMP NUNT       			;WEITERNORIGHT		CMP #11        			;LINKS?	BNE NOLEFT     			;NEIN	LDA COLOR0,X   			;JA FARBWERT	ADC #16        			;ERHOHEN	STA COLOR0,X	JMP NUNTNOLEFT		CMP #13       			;STICK UNTEN	BNE NUNT      			;NEIN	LDA #<STATUS 			;JA ENDE.	STA RAM      			;MENUEZEILE	LDA #>STATUS 			;WIEDER EIN-	STA RAM+1     			;BLENDEN.	JSR RUNTER    			;CURSOR RUNTER.	JMP STICK     			;RETURN.NUNT		JMP COLOP     			;WEITERMACHEN.;; AUSWAHL WELCHER LEVEL GESAVT WERDEN; SOLL.;------------------------------------AUSWAHL		LDA #<IOSCR  			;HILFSTEXT	STA RAM       			;AM BILDRAM	LDA #>IOSCR				;EINBLENDEN.	STA RAM+1;LEVELWAL		JSR WAIT      			;WARTEN	LDA STICK0	CMP #7	BNE INCLEV;	LDA LEVEL 	CMP #2	BCC INCLEV	DEC LEVEL	JSR OUTPUT    			;AUSGABE	JMP LEVELWAL;INCLEV		CMP #11	BNE NOINC;	LDA LEVEL	CMP #6	BCS NOINC	INC LEVEL	JSR OUTPUT    			;AUSGABE	JMP LEVELWAL;NOINC		JSR WAIT	JSR WAIT	LDA TRIG	CMP #0	BNE NOEND	JMP IO        			;SAVEN/LOADNOEND		JMP LEVELWAL;; SPEICHERN.LADEN DES GEWAHLTEN LEVELS;------------------------------------IO	LDA #<BLANKLST     		;BITTE	STA 560           		;WARTEN	LDA #>BLANKLST	 		;AUSGEBEN.	STA 561	JSR WAIT;	LDA COMMAND    			;INPUT OUTPUT?	STA DCOMND	LDX LEVEL	DEX	LDA SEKTORL,X	STA DAUX1	LDA SEKTORH,X	STA DAUX2	LDA #<$B550	STA DBUFLO	LDA #>$B550	STA DBUFHI;SAVLEV		JSR DSKINV	JSR ADCSEK	JSR ADCBUFF	LDA SEKTOREN	CMP #6	BNE SAVLEV;; ZEICHENSAETZE;	LDA #<$B000	STA DBUFLO	LDA #>$B000	STA DBUFHI;	LDA #1 	STA SEKTORENCHARSET		JSR DSKINV	JSR ADCBUFF	JSR ADCSEK	LDA SEKTOREN	CMP #20	BNE CHARSET;	LDA #<STATUS	STA RAM	LDA #>STATUS	STA RAM+1	LDA #1	STA SEKTOREN;	LDA #<DLIST    			;ALTEN BILD-	STA 560        			;SCHIRM	LDA #>DLIST 			;WIEDER	STA 561        			;EINSCALTEN.;	JSR WAIT	JSR WAIT	JMP STICK;; OUTPUT DER X/Y POS CURSOR UND DES; ORGINAL ZEICHENS UND DER LEVELNR.;------------------------------------OUTPUT		LDA XPOS	ASL           			;XPOS*2		ASL	TAX	LDA NUMMER,X	STA STATUS+20	INX	LDA NUMMER,X	STA STATUS+21;	LDA YPOS	ASL           			;YPOS*2	ASL	TAX	LDA NUMMER,X	STA STATUS+34	INX	LDA NUMMER,X	STA STATUS+35;	LDA ORGINAL	STA STATUS+8;	LDA LEVEL     			;LEVEL NR.	ASL	TAX	LDA NUMMER,X	STA IOSCR+50	INX	LDA NUMMER,X	STA IOSCR+51;	RTS	;; WAIT;------------------------------------WAIT		LDX #100L1	LDY #100L2	DEY	BNE L2	DEX	BNE L1	RTS;; UNTERPROGRAMM PM GRAFIK EINLESEN;------------------------------------READ		LDX #0	LDY YPL1	LDA OBJEKT,X	STA PLAYER1,Y	INY	INX	CPX #4	BNE PL1	RTS ;; UNTERPROGRAMM PM GRAFIK LOESCHEN;------------------------------------PMWEG		LDX #0CLEAR		LDA #0	STA PLAYER1,X	INX	CPX #255	BNE CLEAR	RTS;; UNTERPROGRAMM BRAMADR +40;       ''         ''   -40;       ''         ''   +1;       ''         ''   -1;------------------------------------ADC40		CLC	LDA BRAMADRL	ADC #40	STA BRAMADRL	LDA BRAMADRH	ADC #0	STA BRAMADRH	RTS;SBC40		SEC	LDA BRAMADRL	SBC #40	STA BRAMADRL	LDA BRAMADRH	SBC #0	STA BRAMADRH	RTS;ADC1		CLC	LDA BRAMADRL	ADC #1	STA BRAMADRL	LDA BRAMADRH	ADC #0	STA BRAMADRH	RTS;SBC1		SEC	LDA BRAMADRL	SBC #1	STA BRAMADRL	LDA BRAMADRH	SBC #0	STA BRAMADRH	RTS	;; UNTERPROGRAMM SEKTOR+1;------------------------------------ADCSEK		CLC	LDA DAUX1	ADC #1	STA DAUX1	LDA DAUX2	ADC #0	STA DAUX2	INC SEKTOREN	RTS;; UNTERPROGRAMM BUFFER+128;------------------------------------ADCBUFF		CLC	LDA DBUFLO	ADC #128	STA DBUFLO	LDA DBUFHI	ADC #0	STA DBUFHI	RTS;; DISPLAY INTERUPT UNTERPROGRAMME;; -DLI1:TITELZEILE; -DLI2:ZEICHENFELD; -DLI3:STATUSZEILE;-------------------------------------COLPF0	EQU $D016COLPF1	EQU $D017COLPF2	EQU $D018COLPF3	EQU $D019COLPF4	EQU $D01AVCOUNT	EQU $D40BWSYNC	EQU $D40AZEIGER	EQU $D409DLIVKTL	EQU 512DLIVKTH	EQU 513ZSATZ	EQU $B000;; DLI NO.1;DLI1		PHA 	STA WSYNC	LDA #10	STA COLPF2		LDA #0	STA COLPF1	STA COLPF4	LDA #224     			;ORGINAL CHARSET	STA ZEIGER	LDA #<DLI2  			;ZEIGER AUF NEUHE	STA DLIVKTL  			;ROTINE.	LDA #>DLI2	STA DLIVKTH	PLA         			;RETURN F.INTERUPT.	RTI;; DLI NO.2 (SCHWARZE LEERZEILE);DLI2		PHA	STA WSYNC	LDA #0	STA COLPF4	STA COLPF2	LDA #<DLI3	STA DLIVKTL	LDA #>DLI3 	STA DLIVKTH	PLA	RTI;; DLI NO.3 (2.ZEILE STATUSANZEIGE);DLI3		PHA	STA WSYNC	LDA #10	STA COLPF2	LDA #0	STA COLPF4	STA COLPF1	LDA #<DLI4	STA DLIVKTL	LDA #>DLI4	STA DLIVKTH	PLA	RTI	;; DLI NO.4 (SCHWARZE LEERZEILE);DLI4		PHA	STA WSYNC	LDA #0	STA COLPF4	STA COLPF2	LDA #<DLI5	STA DLIVKTL	LDA #>DLI5	STA DLIVKTH	PLA	RTI; ; DLI NO.5 (ARBEITSFLAECHE);DLI5		PHA	STA WSYNC	LDA COLOR0	STA COLPF0	LDA COLOR1	STA COLPF1	LDA COLOR2	STA COLPF2	LDA COLOR3	STA COLPF3		LDA COLOR4	STA COLPF4	LDA CHAR	STA ZEIGER	LDA #<DLI6	STA DLIVKTL	LDA #>DLI6	STA DLIVKTH	PLA	RTI;; DLI NO.6 (UNTERER TEIL WORK AEREA);DLI6		PHA	STA WSYNC	LDA #10	STA COLPF4	LDA #<DLI7	STA DLIVKTL	LDA #>DLI7	STA DLIVKTH	PLA	RTI;; DLI NO.7 (ENDE WORK AREA);DLI7		PHA	STA WSYNC	LDA #0	STA COLPF4	LDA #<DLI1	STA DLIVKTL	LDA #>DLI1	STA DLIVKTH	PLA	RTI